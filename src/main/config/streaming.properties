# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=streaming

# YARN
yarn.package.path=file:///opt/rb/var/rb-samza-iot/app/rb-samza-iot.tar.gz
yarn.container.count=1
yarn.queue=samza

# Task
task.class=net.redborder.samza.tasks.StreamProcessor
task.inputs=kafka.rb_iot
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
task.checkpoint.replication.factor=1
task.opts=-Dsamza.application.name=samza-iot

# Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory

# Kafka System
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=json
systems.kafka.consumer.zookeeper.connect=zookeeper:2181/
systems.kafka.producer.bootstrap.servers=kafka:9092

# Stores
stores.postgresql.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.postgresql.changelog=kafka.samza-psql-iot-log
stores.postgresql.changelog.replication.factor=1
stores.postgresql.key.serde=string
stores.postgresql.msg.serde=json

redborder.stores.postgresql.keys=sensor_uuid:namespace_uuid
redborder.stores.postgresql.overwrite=false

redborder.stores.window.postgresql.lastUpdate=true
redborder.stores.window.postgresql.class=net.redborder.samza.iot.stores.PsqlStore

redborder.stores.windows=postgresql
redborder.stores=postgresql

# Processors
redborder.processors.types.iot.class=net.redborder.samza.iot.processors.IotProcessor
redborder.processors.rb_iot=iot
